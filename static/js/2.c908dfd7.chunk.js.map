{"version":3,"sources":["components/OversizedPanel/index.js","webpack:///./src/assets/images/dropdown-blue.svg?8fdf","components/AddressInputPanel/index.js","assets/svg/SVGArrowDown.js","components/ContextualInfoNew/index.js","components/TransactionDetails/index.js","components/ExchangePage/index.jsx"],"names":["Panel","styled","div","theme","concreteGray","PanelTop","PanelBottom","OversizedPanel","hideTop","hideBottom","children","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgDropdownBlue","_ref","svgRef","title","props","createElement","width","height","viewBox","fill","ref","d","stroke","ForwardRef","forwardRef","InputPanel","flexColumnNoWrap","transparentize","shadowColor","inputBackground","ContainerRow","error","salmonRed","mercuryGray","InputContainer","LabelRow","flexRowNoWrap","doveGray","LabelContainer","InputRow","Input","input","royalBlue","placeholderGray","AddressInputPanel","initialInput","onChange","onError","t","useTranslation","library","useWeb3React","useState","address","setInput","debouncedInput","useDebounce","undefined","name","data","setData","setError","useEffect","stale","isAddress","lookupAddress","then","catch","resolveName","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","event","value","checksummedInput","SVGArrowDown","SummaryWrapper","brokenTokenWarning","SummaryWrapperContainer","Details","ErrorSpan","span","isError","slippageWarning","highSlippageWarning","css","warningYellow","ColoredDropup","rest","ColoredDropdown","ContextualInfo","openDetailsText","closeDetailsText","contextualInfo","allowExpand","dropDownContent","showDetails","setShowDetails","onClick","ReactGA","category","action","label","s","role","aria-label","WARNING_TYPE","freeze","none","emptyInput","invalidEntryBound","riskyEntryHigh","riskyEntryLow","Flex","FlexBetween","SlippageRow","wrap","QuestionWrapper","button","HelpCircleStyled","img","fadeIn","keyframes","Popup","textColor","mediaWidth","upToSmall","FancyButton","chaliceGray","Option","active","white","darken","lighten","OptionLarge","color","BottomError","show","OptionCustom","Bold","LastSummaryText","SlippageSelector","Percent","Faded","TransactionInfo","ValueWrapper","DeadlineSelector","DeadlineRow","DeadlineInput","TransactionDetails","activeIndex","setActiveIndex","warningType","setWarningType","inputRef","useRef","showPopup","setPopup","userInput","setUserInput","checkBounds","deadlineInput","setDeadlineInput","renderTransactionDetails","onMouseEnter","onMouseLeave","src","question","alt","setFromFixed","setFromCustom","tabIndex","parseInput","toString","parseDeadlineInput","current","focus","setRawSlippage","setRawTokenSlippage","setcustomSlippageError","setDeadline","updateSlippage","useCallback","newSlippage","numParsed","parseInt","index","slippage","rawSlippage","initialSlippage","Number","some","val","test","slippageValue","e","a","deadline","initialDeadline","re","b","text","independentField","INPUT","sending","amountFormatter","independentValueParsed","independentDecimals","Math","min","inputSymbol","recipientAddress","dependentValueMinumum","dependentDecimals","outputSymbol","percentSlippageFormatted","dependentValueMaximum","inputError","independentError","inputCurrency","outputCurrency","independentValue","account","slippageWarningText","inputValueParsed","outputValueParsed","renderSummary","GAS_MARGIN","ethers","utils","bigNumberify","DownArrowBackground","DownArrow","clickable","ExchangeRateWrapper","ExchangeRate","calculateEtherTokenOutputFromInput","inputAmount","inputReserve","outputReserve","inputAmountWithFee","mul","numerator","denominator","add","calculateEtherTokenInputFromOutput","outputAmount","sub","constants","One","getInitialSwapState","state","exactFieldURL","exactAmountURL","dependentValue","inputCurrencyURL","outputCurrencyURL","initialCurrency","swapStateReducer","payload","field","currency","newInputCurrency","newOutputCurrency","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","ExchangePage","params","chainId","urlAddedTokens","addTransaction","useTransactionAdder","isNaN","setBrokenTokenWarning","deadlineFromNow","setDeadlineFromNow","rawTokenSlippage","allowedSlippageBig","tokenAllowedSlippageBig","pageview","window","location","pathname","search","useReducer","exactField","exactAmount","swapState","dispatchSwapState","brokenTokens","toLowerCase","recipient","setRecipient","recipientError","setRecipientError","swapType","getSwapType","useTokenDetails","symbol","decimals","inputExchangeAddress","exchangeAddress","outputExchangeAddress","inputExchangeContract","useExchangeContract","outputExchangeContract","contract","inputAllowance","useAddressAllowance","useExchangeReserves","inputReserveETH","reserveETH","inputReserveToken","reserveToken","outputReserveETH","outputReserveToken","inputBalance","useAddressBalance","outputBalance","inputBalanceFormatted","isInteger","outputBalanceFormatted","setIndependentValueParsed","dependentValueFormatted","inputValueFormatted","outputValueFormatted","setIndependentError","parsedValue","parseUnits","lte","Zero","gte","MaxUint256","Error","token","tokenAllowedSlippage","allowedSlippage","offset","minimum","maximum","lt","gt","calculateSlippageBounds","setInputError","showUnlock","setShowUnlock","inputValueCalculation","amount","calculatedDependentValue","reserveETHFirst","reserveTokenFirst","reserveETHSecond","reserveTokenSecond","intermediateValue","createBrowserHistory","push","inverted","setInverted","exchangeRate","exchangeRateInverted","marketRate","firstRate","secondRate","getMarketRate","percentSlippage","isZero","abs","parseEther","isValid","estimatedText","formatBalance","ceil","Date","now","inputEthPerToken","ethTransactionSize","estimate","ethToTokenTransferInput","ethToTokenSwapInput","method","args","tokenToEthTransferInput","tokenToEthSwapInput","tokenToTokenTransferInput","tokenToTokenSwapInput","ethToTokenTransferOutput","ethToTokenSwapOutput","tokenToEthTransferOutput","tokenToEthSwapOutput","tokenToTokenTransferOutput","tokenToTokenSwapOutput","estimatedGasLimit","gasLimit","calculateGasMargin","response","dimension1","hash","customSlippageError","toggleWalletModal","useWalletModalToggle","newInputDetected","INITIAL_TOKENS_CONTEXT","newOutputDetected","showInputWarning","setShowInputWarning","showOutputWarning","setShowOutputWarning","WarningCard","onDismiss","CurrencyInputPanel","description","extraText","extraTextClickHander","valueToSet","onCurrencySelected","onValueChange","selectedTokens","selectedTokenAddress","errorMessage","disableUnlock","disabled","warning","loggedOut"],"mappings":"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","file":"static/js/2.c908dfd7.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Panel = styled.div`\n  position: relative;\n  background-color: ${({ theme }) => theme.concreteGray};\n  width: calc(100% - 1rem);\n  margin: 0 auto;\n  border-radius: 0.625rem;\n`\n\nconst PanelTop = styled.div`\n  content: '';\n  position: absolute;\n  top: -0.5rem;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nconst PanelBottom = styled.div`\n  position: absolute;\n  top: 80%;\n  left: 0;\n  height: 1rem;\n  width: 100%;\n  background-color: ${({ theme }) => theme.concreteGray};\n`\n\nexport default function OversizedPanel({ hideTop, hideBottom, children }) {\n  return (\n    <Panel>\n      {hideTop || <PanelTop />}\n      {children}\n      {hideBottom || <PanelBottom />}\n    </Panel>\n  )\n}\n","var _path;\n\nvar _excluded = [\"svgRef\", \"title\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar SvgDropdownBlue = function SvgDropdownBlue(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 7,\n    viewBox: \"0 0 12 7\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0.97168 1L6.20532 6L11.439 1\",\n    stroke: \"#2F80ED\"\n  })));\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgDropdownBlue, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/dropdown-blue.b20914ec.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\nimport { transparentize } from 'polished'\n\nimport { isAddress } from '../../utils'\nimport { useWeb3React, useDebounce } from '../../hooks'\n\nconst InputPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.inputBackground};\n  z-index: 1;\n`\n\nconst ContainerRow = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\n\n  background-color: ${({ theme }) => theme.inputBackground};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n`\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem;\n`\n\nconst LabelContainer = styled.div`\n  flex: 1 1 auto;\n  width: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n`\n\nconst InputRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  padding: 0.25rem 0.85rem 0.75rem;\n`\n\nconst Input = styled.input`\n  font-size: 1rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  width: 0;\n  background-color: ${({ theme }) => theme.inputBackground};\n\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.royalBlue)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.placeholderGray};\n  }\n`\n\nexport default function AddressInputPanel({ title, initialInput = '', onChange = () => {}, onError = () => {} }) {\n  const { t } = useTranslation()\n\n  const { library } = useWeb3React()\n\n  const [input, setInput] = useState(initialInput.address ? initialInput.address : '')\n\n  const debouncedInput = useDebounce(input, 150)\n\n  const [data, setData] = useState({ address: undefined, name: undefined })\n  const [error, setError] = useState(false)\n\n  // keep data and errors in sync\n  useEffect(() => {\n    onChange({ address: data.address, name: data.name })\n  }, [onChange, data.address, data.name])\n  useEffect(() => {\n    onError(error)\n  }, [onError, error])\n\n  // run parser on debounced input\n  useEffect(() => {\n    let stale = false\n\n    if (isAddress(debouncedInput)) {\n      try {\n        library\n          .lookupAddress(debouncedInput)\n          .then(name => {\n            if (!stale) {\n              // if an ENS name exists, set it as the destination\n              if (name) {\n                setInput(name)\n              } else {\n                setData({ address: debouncedInput, name: '' })\n                setError(null)\n              }\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setData({ address: debouncedInput, name: '' })\n              setError(null)\n            }\n          })\n      } catch {\n        setData({ address: debouncedInput, name: '' })\n        setError(null)\n      }\n    } else {\n      if (debouncedInput !== '') {\n        try {\n          library\n            .resolveName(debouncedInput)\n            .then(address => {\n              if (!stale) {\n                // if the debounced input name resolves to an address\n                if (address) {\n                  setData({ address: address, name: debouncedInput })\n                  setError(null)\n                } else {\n                  setError(true)\n                }\n              }\n            })\n            .catch(() => {\n              if (!stale) {\n                setError(true)\n              }\n            })\n        } catch {\n          setError(true)\n        }\n      }\n    }\n\n    return () => {\n      stale = true\n    }\n  }, [debouncedInput, library, onChange, onError])\n\n  function onInput(event) {\n    if (data.address !== undefined || data.name !== undefined) {\n      setData({ address: undefined, name: undefined })\n    }\n    if (error !== undefined) {\n      setError()\n    }\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setInput(checksummedInput || input)\n  }\n\n  return (\n    <InputPanel>\n      <ContainerRow error={input !== '' && error}>\n        <InputContainer>\n          <LabelRow>\n            <LabelContainer>\n              <span>{title || t('recipientAddress')}</span>\n            </LabelContainer>\n          </LabelRow>\n          <InputRow>\n            <Input\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder=\"0x1234...\"\n              error={input !== '' && error}\n              onChange={onInput}\n              value={input}\n            />\n          </InputRow>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\n\nconst SVGArrowDown = props => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 10\" fill=\"currentColor\" {...props}>\n    <path\n      d=\"M5.298 0H4.24v7.911h-.075L1.256 4.932l-.717.735L4.769 10 9 5.667l-.718-.735-2.908 2.979h-.076V0z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SVGArrowDown\n","import React, { useState } from 'react'\nimport styled, { css } from 'styled-components'\nimport { transparentize } from 'polished'\nimport ReactGA from 'react-ga'\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, brokenTokenWarning, theme }) => (error || brokenTokenWarning ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  /* padding: 1.25rem 1.25rem 1rem 1.25rem; */\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin: 1rem 0.5rem 0 0.5rem;\n`\n\nconst ErrorSpan = styled.span`\n  margin-right: 12px;\n  font-size: 0.75rem;\n  line-height: 0.75rem;\n\n  color: ${({ isError, theme }) => isError && theme.salmonRed};\n  ${({ slippageWarning, highSlippageWarning, theme }) =>\n    highSlippageWarning\n      ? css`\n          color: ${theme.salmonRed};\n          font-weight: 600;\n        `\n      : slippageWarning &&\n        css`\n          background-color: ${transparentize(0.6, theme.warningYellow)};\n          font-weight: 600;\n          padding: 0.25rem;\n        `}\n`\n\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({ isError, theme }) => (isError ? theme.salmonRed : theme.royalBlue)};\n\n    ${({ highSlippageWarning, theme }) =>\n      highSlippageWarning &&\n      css`\n        stroke: ${theme.salmonRed};\n      `}\n  }\n`\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ isError, theme }) => (isError ? theme.salmonRed : theme.royalBlue)};\n\n    ${({ highSlippageWarning, theme }) =>\n      highSlippageWarning &&\n      css`\n        stroke: ${theme.salmonRed};\n      `}\n  }\n`\n\nexport default function ContextualInfo({\n  openDetailsText = 'Advanced Details',\n  closeDetailsText = 'Hide Advanced',\n  contextualInfo = '',\n  allowExpand = false,\n  isError = false,\n  slippageWarning,\n  highSlippageWarning,\n  brokenTokenWarning,\n  dropDownContent\n}) {\n  const [showDetails, setShowDetails] = useState(false)\n  return !allowExpand ? (\n    <SummaryWrapper brokenTokenWarning={brokenTokenWarning}>{contextualInfo}</SummaryWrapper>\n  ) : (\n    <>\n      <SummaryWrapperContainer\n        onClick={() => {\n          !showDetails &&\n            ReactGA.event({\n              category: 'Advanced Interaction',\n              action: 'Open Advanced Details',\n              label: 'Swap/Send Page Details'\n            })\n          setShowDetails(s => !s)\n        }}\n      >\n        <>\n          <ErrorSpan isError={isError} slippageWarning={slippageWarning} highSlippageWarning={highSlippageWarning}>\n            {(slippageWarning || highSlippageWarning) && (\n              <span role=\"img\" aria-label=\"warning\">\n                ⚠️\n              </span>\n            )}\n            {contextualInfo ? contextualInfo : showDetails ? closeDetailsText : openDetailsText}\n          </ErrorSpan>\n          {showDetails ? (\n            <ColoredDropup isError={isError} highSlippageWarning={highSlippageWarning} />\n          ) : (\n            <ColoredDropdown isError={isError} highSlippageWarning={highSlippageWarning} />\n          )}\n        </>\n      </SummaryWrapperContainer>\n      {showDetails && <Details>{dropDownContent()}</Details>}\n    </>\n  )\n}\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled, { css, keyframes } from 'styled-components'\nimport { darken, lighten } from 'polished'\nimport { isAddress, amountFormatter } from '../../utils'\nimport { useDebounce } from '../../hooks'\n\nimport question from '../../assets/images/question.svg'\n\nimport NewContextualInfo from '../../components/ContextualInfoNew'\n\nconst WARNING_TYPE = Object.freeze({\n  none: 'none',\n  emptyInput: 'emptyInput',\n  invalidEntryBound: 'invalidEntryBound',\n  riskyEntryHigh: 'riskyEntryHigh',\n  riskyEntryLow: 'riskyEntryLow'\n})\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n`\n\nconst FlexBetween = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 100%;\n`\n\nconst WrappedSlippageRow = ({ wrap, ...rest }) => <Flex {...rest} />\nconst SlippageRow = styled(WrappedSlippageRow)`\n  position: relative;\n  flex-wrap: ${({ wrap }) => wrap && 'wrap'};\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n  padding: 0;\n  padding-top: ${({ wrap }) => wrap && '0.25rem'};\n`\n\nconst QuestionWrapper = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n  margin-left: 0.4rem;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst HelpCircleStyled = styled.img`\n  height: 18px;\n  width: 18px;\n`\n\nconst fadeIn = keyframes`\n  from {\n    opacity : 0;\n  }\n\n  to {\n    opacity : 1;\n  }\n`\n\nconst Popup = styled(Flex)`\n  position: absolute;\n  width: 228px;\n  left: -78px;\n  top: -94px;\n  flex-direction: column;\n  align-items: center;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  background: ${({ theme }) => theme.inputBackground};\n  border: 1px solid ${({ theme }) => theme.mercuryGray};\n\n  border-radius: 8px;\n\n  animation: ${fadeIn} 0.15s linear;\n\n  color: ${({ theme }) => theme.textColor};\n  font-style: italic;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    left: -20px;\n  `}\n`\n\nconst FancyButton = styled.button`\n  color: ${({ theme }) => theme.textColor};\n  align-items: center;\n  min-width: 55px;\n  height: 2rem;\n  border-radius: 36px;\n  font-size: 12px;\n  border: 1px solid ${({ theme }) => theme.mercuryGray};\n  outline: none;\n  background: ${({ theme }) => theme.inputBackground};\n\n  :hover {\n    cursor: inherit;\n    border: 1px solid ${({ theme }) => theme.chaliceGray};\n  }\n  :focus {\n    border: 1px solid ${({ theme }) => theme.royalBlue};\n  }\n`\n\nconst Option = styled(FancyButton)`\n  margin-right: 8px;\n  margin-top: 6px;\n\n  :hover {\n    cursor: pointer;\n  }\n\n  ${({ active, theme }) =>\n    active &&\n    css`\n      background-color: ${({ theme }) => theme.royalBlue};\n      color: ${({ theme }) => theme.white};\n      border: none;\n\n      :hover {\n        border: none;\n        box-shadow: none;\n        background-color: ${({ theme }) => darken(0.05, theme.royalBlue)};\n      }\n\n      :focus {\n        border: none;\n        box-shadow: none;\n        background-color: ${({ theme }) => lighten(0.05, theme.royalBlue)};\n      }\n\n      :active {\n        background-color: ${({ theme }) => darken(0.05, theme.royalBlue)};\n      }\n\n      :hover:focus {\n        background-color: ${({ theme }) => theme.royalBlue};\n      }\n      :hover:focus:active {\n        background-color: ${({ theme }) => darken(0.05, theme.royalBlue)};\n      }\n    `}\n`\n\nconst OptionLarge = styled(Option)`\n  width: 120px;\n`\n\nconst Input = styled.input`\n  background: ${({ theme }) => theme.inputBackground};\n  flex-grow: 1;\n  font-size: 12px;\n  min-width: 20px;\n\n  outline: none;\n  box-sizing: border-box;\n\n  &::-webkit-outer-spin-button,\n  &::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  cursor: inherit;\n\n  color: ${({ theme }) => theme.doveGray};\n  text-align: left;\n  ${({ active }) =>\n    active &&\n    css`\n      color: initial;\n      cursor: initial;\n      text-align: right;\n    `}\n\n  ${({ placeholder }) =>\n    placeholder !== 'Custom' &&\n    css`\n      text-align: right;\n      color: ${({ theme }) => theme.textColor};\n    `}\n\n  ${({ color }) =>\n    color === 'red' &&\n    css`\n      color: ${({ theme }) => theme.salmonRed};\n    `}\n`\n\nconst BottomError = styled.div`\n  ${({ show }) =>\n    show &&\n    css`\n      padding-top: 12px;\n    `}\n  color: ${({ theme }) => theme.doveGray};\n  ${({ color }) =>\n    color === 'red' &&\n    css`\n      color: ${({ theme }) => theme.salmonRed};\n    `}\n`\n\nconst OptionCustom = styled(FancyButton)`\n  height: 2rem;\n  position: relative;\n  width: 120px;\n  margin-top: 6px;\n  padding: 0 0.75rem;\n\n  ${({ active }) =>\n    active &&\n    css`\n      border: 1px solid ${({ theme }) => theme.royalBlue};\n      :hover {\n        border: 1px solid ${({ theme }) => darken(0.1, theme.royalBlue)};\n      }\n    `}\n\n  ${({ color }) =>\n    color === 'red' &&\n    css`\n      border: 1px solid ${({ theme }) => theme.salmonRed};\n    `}\n\n  input {\n    width: 100%;\n    height: 100%;\n    border: 0px;\n    border-radius: 2rem;\n  }\n`\n\nconst Bold = styled.span`\n  font-weight: 500;\n`\n\nconst LastSummaryText = styled.div`\n  padding-top: 0.5rem;\n`\n\nconst SlippageSelector = styled.div`\n  background-color: ${({ theme }) => darken(0.04, theme.concreteGray)};\n  padding: 1rem 1.25rem 1rem 1.25rem;\n  border-radius: 12px 12px 0 0;\n`\n\nconst Percent = styled.div`\n  color: inherit;\n  font-size: 0, 8rem;\n  flex-grow: 0;\n\n  ${({ color, theme }) =>\n    (color === 'faded' &&\n      css`\n        color: ${theme.doveGray};\n      `) ||\n    (color === 'red' &&\n      css`\n        color: ${theme.salmonRed};\n      `)};\n`\n\nconst Faded = styled.span`\n  opacity: 0.7;\n`\n\nconst TransactionInfo = styled.div`\n  padding: 1.25rem 1.25rem 1rem 1.25rem;\n`\n\nconst ValueWrapper = styled.span`\n  padding: 0.125rem 0.3rem 0.1rem 0.3rem;\n  background-color: ${({ theme }) => darken(0.04, theme.concreteGray)};\n  border-radius: 12px;\n  font-variant: tabular-nums;\n`\n\nconst DeadlineSelector = styled.div`\n  background-color: ${({ theme }) => darken(0.04, theme.concreteGray)};\n  padding: 1rem 1.25rem 1rem 1.25rem;\n  border-radius: 0 0 12px 12px;\n`\nconst DeadlineRow = SlippageRow\nconst DeadlineInput = OptionCustom\n\nexport default function TransactionDetails(props) {\n  const { t } = useTranslation()\n\n  const [activeIndex, setActiveIndex] = useState(3)\n\n  const [warningType, setWarningType] = useState(WARNING_TYPE.none)\n\n  const inputRef = useRef()\n\n  const [showPopup, setPopup] = useState(false)\n\n  const [userInput, setUserInput] = useState('')\n  const debouncedInput = useDebounce(userInput, 150)\n\n  useEffect(() => {\n    if (activeIndex === 4) {\n      checkBounds(debouncedInput)\n    }\n  })\n\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n    if (props.brokenTokenWarning) {\n      contextualInfo = t('brokenToken')\n      isError = true\n    } else if (props.inputError || props.independentError) {\n      contextualInfo = props.inputError || props.independentError\n      isError = true\n    } else if (!props.inputCurrency || !props.outputCurrency) {\n      contextualInfo = t('selectTokenCont')\n    } else if (!props.independentValue) {\n      contextualInfo = t('enterValueCont')\n    } else if (props.sending && !props.recipientAddress) {\n      contextualInfo = t('noRecipient')\n    } else if (props.sending && !isAddress(props.recipientAddress)) {\n      contextualInfo = t('invalidRecipient')\n    } else if (!props.account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    const slippageWarningText = props.highSlippageWarning\n      ? t('highSlippageWarning')\n      : props.slippageWarning\n      ? t('slippageWarning')\n      : ''\n\n    return (\n      <NewContextualInfo\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo ? contextualInfo : slippageWarningText}\n        allowExpand={\n          !!(\n            !props.brokenTokenWarning &&\n            props.inputCurrency &&\n            props.outputCurrency &&\n            props.inputValueParsed &&\n            props.outputValueParsed &&\n            (props.sending ? props.recipientAddress : true)\n          )\n        }\n        isError={isError}\n        slippageWarning={props.slippageWarning && !contextualInfo}\n        highSlippageWarning={props.highSlippageWarning && !contextualInfo}\n        brokenTokenWarning={props.brokenTokenWarning}\n        renderTransactionDetails={renderTransactionDetails}\n        dropDownContent={dropDownContent}\n      />\n    )\n  }\n\n  const dropDownContent = () => {\n    return (\n      <>\n        {renderTransactionDetails()}\n        <SlippageSelector>\n          <SlippageRow>\n            Limit additional price slippage\n            <QuestionWrapper\n              onClick={() => {\n                setPopup(!showPopup)\n              }}\n              onMouseEnter={() => {\n                setPopup(true)\n              }}\n              onMouseLeave={() => {\n                setPopup(false)\n              }}\n            >\n              <HelpCircleStyled src={question} alt=\"popup\" />\n            </QuestionWrapper>\n            {showPopup ? (\n              <Popup>\n                Lowering this limit decreases your risk of frontrunning. However, this makes it more likely that your\n                transaction will fail due to normal price movements.\n              </Popup>\n            ) : (\n              ''\n            )}\n          </SlippageRow>\n          <SlippageRow wrap>\n            <Option\n              onClick={() => {\n                setFromFixed(1, 0.1)\n              }}\n              active={activeIndex === 1}\n            >\n              0.1%\n            </Option>\n            <OptionLarge\n              onClick={() => {\n                setFromFixed(2, 0.5)\n              }}\n              active={activeIndex === 2}\n            >\n              0.5% <Faded>(suggested)</Faded>\n            </OptionLarge>\n            <Option\n              onClick={() => {\n                setFromFixed(3, 1)\n              }}\n              active={activeIndex === 3}\n            >\n              1%\n            </Option>\n            <OptionCustom\n              active={activeIndex === 4}\n              color={\n                warningType === WARNING_TYPE.emptyInput\n                  ? ''\n                  : warningType !== WARNING_TYPE.none && warningType !== WARNING_TYPE.riskyEntryLow\n                  ? 'red'\n                  : ''\n              }\n              onClick={() => {\n                setFromCustom()\n              }}\n            >\n              <FlexBetween>\n                {!(warningType === WARNING_TYPE.none || warningType === WARNING_TYPE.emptyInput) && (\n                  <span role=\"img\" aria-label=\"warning\">\n                    ⚠️\n                  </span>\n                )}\n                <Input\n                  tabIndex={-1}\n                  ref={inputRef}\n                  active={activeIndex === 4}\n                  placeholder={\n                    activeIndex === 4\n                      ? !!userInput\n                        ? ''\n                        : '0'\n                      : activeIndex !== 4 && userInput !== ''\n                      ? userInput\n                      : 'Custom'\n                  }\n                  value={activeIndex === 4 ? userInput : ''}\n                  onChange={parseInput}\n                  color={\n                    warningType === WARNING_TYPE.emptyInput\n                      ? ''\n                      : warningType !== WARNING_TYPE.none && warningType !== WARNING_TYPE.riskyEntryLow\n                      ? 'red'\n                      : ''\n                  }\n                />\n                <Percent\n                  color={\n                    activeIndex !== 4\n                      ? 'faded'\n                      : warningType === WARNING_TYPE.riskyEntryHigh || warningType === WARNING_TYPE.invalidEntryBound\n                      ? 'red'\n                      : ''\n                  }\n                >\n                  %\n                </Percent>\n              </FlexBetween>\n            </OptionCustom>\n          </SlippageRow>\n          <SlippageRow>\n            <BottomError\n              show={activeIndex === 4}\n              color={\n                warningType === WARNING_TYPE.emptyInput\n                  ? ''\n                  : warningType !== WARNING_TYPE.none && warningType !== WARNING_TYPE.riskyEntryLow\n                  ? 'red'\n                  : ''\n              }\n            >\n              {activeIndex === 4 && warningType.toString() === 'none' && 'Custom slippage value'}\n              {warningType === WARNING_TYPE.emptyInput && 'Enter a slippage percentage'}\n              {warningType === WARNING_TYPE.invalidEntryBound && 'Please select a value no greater than 50%'}\n              {warningType === WARNING_TYPE.riskyEntryHigh && 'Your transaction may be frontrun'}\n              {warningType === WARNING_TYPE.riskyEntryLow && 'Your transaction may fail'}\n            </BottomError>\n          </SlippageRow>\n        </SlippageSelector>\n        <DeadlineSelector>\n          Set swap deadline (minutes from now)\n          <DeadlineRow wrap>\n            <DeadlineInput>\n              <Input placeholder={'Deadline'} value={deadlineInput} onChange={parseDeadlineInput} />\n            </DeadlineInput>\n          </DeadlineRow>\n        </DeadlineSelector>\n      </>\n    )\n  }\n\n  const setFromCustom = () => {\n    setActiveIndex(4)\n    inputRef.current.focus()\n    // if there's a value, evaluate the bounds\n    checkBounds(debouncedInput)\n  }\n\n  // destructure props for to limit effect callbacks\n  const setRawSlippage = props.setRawSlippage\n  const setRawTokenSlippage = props.setRawTokenSlippage\n  const setcustomSlippageError = props.setcustomSlippageError\n  const setDeadline = props.setDeadline\n\n  const updateSlippage = useCallback(\n    newSlippage => {\n      // round to 2 decimals to prevent ethers error\n      let numParsed = parseInt(newSlippage * 100)\n\n      // set both slippage values in parents\n      setRawSlippage(numParsed)\n      setRawTokenSlippage(numParsed)\n    },\n    [setRawSlippage, setRawTokenSlippage]\n  )\n\n  // used for slippage presets\n  const setFromFixed = useCallback(\n    (index, slippage) => {\n      // update slippage in parent, reset errors and input state\n      updateSlippage(slippage)\n      setWarningType(WARNING_TYPE.none)\n      setActiveIndex(index)\n      setcustomSlippageError('valid`')\n    },\n    [setcustomSlippageError, updateSlippage]\n  )\n\n  /**\n   * @todo\n   * Breaks without useState here, able to\n   * break input parsing if typing is faster than\n   * debounce time\n   */\n\n  const [initialSlippage] = useState(props.rawSlippage)\n\n  useEffect(() => {\n    switch (Number.parseInt(initialSlippage)) {\n      case 10:\n        setFromFixed(1, 0.1)\n        break\n      case 50:\n        setFromFixed(2, 0.5)\n        break\n      case 100:\n        setFromFixed(3, 1)\n        break\n      default:\n        // restrict to 2 decimal places\n        let acceptableValues = [/^$/, /^\\d{1,2}$/, /^\\d{0,2}\\.\\d{0,2}$/]\n        // if its within accepted decimal limit, update the input state\n        if (acceptableValues.some(val => val.test(initialSlippage / 100))) {\n          setUserInput(initialSlippage / 100)\n          setActiveIndex(4)\n        }\n    }\n  }, [initialSlippage, setFromFixed])\n\n  const checkBounds = useCallback(\n    slippageValue => {\n      setWarningType(WARNING_TYPE.none)\n      setcustomSlippageError('valid')\n\n      if (slippageValue === '' || slippageValue === '.') {\n        setcustomSlippageError('invalid')\n        return setWarningType(WARNING_TYPE.emptyInput)\n      }\n\n      // check bounds and set errors\n      if (Number(slippageValue) < 0 || Number(slippageValue) > 50) {\n        setcustomSlippageError('invalid')\n        return setWarningType(WARNING_TYPE.invalidEntryBound)\n      }\n      if (Number(slippageValue) >= 0 && Number(slippageValue) < 0.1) {\n        setcustomSlippageError('valid')\n        setWarningType(WARNING_TYPE.riskyEntryLow)\n      }\n      if (Number(slippageValue) > 5) {\n        setcustomSlippageError('warning')\n        setWarningType(WARNING_TYPE.riskyEntryHigh)\n      }\n      //update the actual slippage value in parent\n      updateSlippage(Number(slippageValue))\n    },\n    [setcustomSlippageError, updateSlippage]\n  )\n\n  // check that the theyve entered number and correct decimal\n  const parseInput = e => {\n    let input = e.target.value\n\n    // restrict to 2 decimal places\n    let acceptableValues = [/^$/, /^\\d{1,2}$/, /^\\d{0,2}\\.\\d{0,2}$/]\n    // if its within accepted decimal limit, update the input state\n    if (acceptableValues.some(a => a.test(input))) {\n      setUserInput(input)\n    }\n  }\n\n  const [initialDeadline] = useState(props.deadline)\n\n  useEffect(() => {\n    setDeadlineInput(initialDeadline / 60)\n  }, [initialDeadline])\n\n  const parseDeadlineInput = e => {\n    const input = e.target.value\n\n    const acceptableValues = [/^$/, /^\\d+$/]\n    if (acceptableValues.some(re => re.test(input))) {\n      setDeadlineInput(input)\n      setDeadline(parseInt(input) * 60)\n    }\n  }\n\n  const b = text => <Bold>{text}</Bold>\n\n  const renderTransactionDetails = () => {\n    if (props.independentField === props.INPUT) {\n      return props.sending ? (\n        <TransactionInfo>\n          <div>\n            {t('youAreSelling')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.independentValueParsed,\n                  props.independentDecimals,\n                  Math.min(4, props.independentDecimals)\n                )} ${props.inputSymbol}`\n              )}\n            </ValueWrapper>\n          </div>\n          <LastSummaryText>\n            {b(props.recipientAddress)} {t('willReceive')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.dependentValueMinumum,\n                  props.dependentDecimals,\n                  Math.min(4, props.dependentDecimals)\n                )} ${props.outputSymbol}`\n              )}\n            </ValueWrapper>{' '}\n          </LastSummaryText>\n          <LastSummaryText>\n            {t('priceChange')} <ValueWrapper>{b(`${props.percentSlippageFormatted}%`)}</ValueWrapper>\n          </LastSummaryText>\n        </TransactionInfo>\n      ) : (\n        <TransactionInfo>\n          <div>\n            {t('youAreSelling')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.independentValueParsed,\n                  props.independentDecimals,\n                  Math.min(4, props.independentDecimals)\n                )} ${props.inputSymbol}`\n              )}\n            </ValueWrapper>{' '}\n            {t('forAtLeast')}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.dependentValueMinumum,\n                  props.dependentDecimals,\n                  Math.min(4, props.dependentDecimals)\n                )} ${props.outputSymbol}`\n              )}\n            </ValueWrapper>\n          </div>\n          <LastSummaryText>\n            {t('priceChange')} <ValueWrapper>{b(`${props.percentSlippageFormatted}%`)}</ValueWrapper>\n          </LastSummaryText>\n        </TransactionInfo>\n      )\n    } else {\n      return props.sending ? (\n        <TransactionInfo>\n          <div>\n            {t('youAreSending')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.independentValueParsed,\n                  props.independentDecimals,\n                  Math.min(4, props.independentDecimals)\n                )} ${props.outputSymbol}`\n              )}\n            </ValueWrapper>{' '}\n            {t('to')} {b(props.recipientAddress)} {t('forAtMost')}{' '}\n            <ValueWrapper>\n              {b(\n                `${amountFormatter(\n                  props.dependentValueMaximum,\n                  props.dependentDecimals,\n                  Math.min(4, props.dependentDecimals)\n                )} ${props.inputSymbol}`\n              )}\n            </ValueWrapper>{' '}\n          </div>\n          <LastSummaryText>\n            {t('priceChange')} <ValueWrapper>{b(`${props.percentSlippageFormatted}%`)}</ValueWrapper>\n          </LastSummaryText>\n        </TransactionInfo>\n      ) : (\n        <TransactionInfo>\n          {t('youAreBuying')}{' '}\n          <ValueWrapper>\n            {b(\n              `${amountFormatter(\n                props.independentValueParsed,\n                props.independentDecimals,\n                Math.min(4, props.independentDecimals)\n              )} ${props.outputSymbol}`\n            )}\n          </ValueWrapper>{' '}\n          {t('forAtMost')}{' '}\n          <ValueWrapper>\n            {b(\n              `${amountFormatter(\n                props.dependentValueMaximum,\n                props.dependentDecimals,\n                Math.min(4, props.dependentDecimals)\n              )} ${props.inputSymbol}`\n            )}\n          </ValueWrapper>{' '}\n          <LastSummaryText>\n            {t('priceChange')} <ValueWrapper>{b(`${props.percentSlippageFormatted}%`)}</ValueWrapper>\n          </LastSummaryText>\n        </TransactionInfo>\n      )\n    }\n  }\n  return <>{renderSummary()}</>\n}\n","import React, { useState, useReducer, useEffect } from 'react'\nimport ReactGA from 'react-ga'\nimport { createBrowserHistory } from 'history'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\nimport { useTranslation } from 'react-i18next'\n\nimport { useWeb3React } from '../../hooks'\nimport { brokenTokens } from '../../constants'\nimport { amountFormatter, calculateGasMargin, isAddress } from '../../utils'\n\nimport { useExchangeContract } from '../../hooks'\nimport { useTokenDetails, INITIAL_TOKENS_CONTEXT } from '../../contexts/Tokens'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useAddressBalance, useExchangeReserves } from '../../contexts/Balances'\nimport { useAddressAllowance } from '../../contexts/Allowances'\nimport { useWalletModalToggle } from '../../contexts/Application'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../CurrencyInputPanel'\nimport AddressInputPanel from '../AddressInputPanel'\nimport OversizedPanel from '../OversizedPanel'\nimport TransactionDetails from '../TransactionDetails'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport WarningCard from '../WarningCard'\n\nconst INPUT = 0\nconst OUTPUT = 1\n\nconst ETH_TO_TOKEN = 0\nconst TOKEN_TO_ETH = 1\nconst TOKEN_TO_TOKEN = 2\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE_DEFAULT = 50\nconst TOKEN_ALLOWED_SLIPPAGE_DEFAULT = 50\n\n// 15 minutes, denominated in seconds\nconst DEFAULT_DEADLINE_FROM_NOW = 60 * 15\n\n// % above the calculated gas cost that we actually send, denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst WrappedArrowDown = ({ clickable, active, ...rest }) => <ArrowDown {...rest} />\nconst DownArrow = styled(WrappedArrowDown)`\n  color: ${({ theme, active }) => (active ? theme.royalBlue : theme.chaliceGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n  cursor: ${({ clickable }) => clickable && 'pointer'};\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.5rem 1rem;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction calculateSlippageBounds(value, token = false, tokenAllowedSlippage, allowedSlippage) {\n  if (value) {\n    const offset = value.mul(token ? tokenAllowedSlippage : allowedSlippage).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nfunction getSwapType(inputCurrency, outputCurrency) {\n  if (!inputCurrency || !outputCurrency) {\n    return null\n  } else if (inputCurrency === 'BNB') {\n    return ETH_TO_TOKEN\n  } else if (outputCurrency === 'BNB') {\n    return TOKEN_TO_ETH\n  } else {\n    return TOKEN_TO_TOKEN\n  }\n}\n\n// this mocks the getInputPrice function, and calculates the required output\nfunction calculateEtherTokenOutputFromInput(inputAmount, inputReserve, outputReserve) {\n  const inputAmountWithFee = inputAmount.mul(ethers.utils.bigNumberify(997))\n  const numerator = inputAmountWithFee.mul(outputReserve)\n  const denominator = inputReserve.mul(ethers.utils.bigNumberify(1000)).add(inputAmountWithFee)\n  return numerator.div(denominator)\n}\n\n// this mocks the getOutputPrice function, and calculates the required input\nfunction calculateEtherTokenInputFromOutput(outputAmount, inputReserve, outputReserve) {\n  const numerator = inputReserve.mul(outputAmount).mul(ethers.utils.bigNumberify(1000))\n  const denominator = outputReserve.sub(outputAmount).mul(ethers.utils.bigNumberify(997))\n  return numerator.div(denominator).add(ethers.constants.One)\n}\n\nfunction getInitialSwapState(state) {\n  return {\n    independentValue: state.exactFieldURL && state.exactAmountURL ? state.exactAmountURL : '', // this is a user input\n    dependentValue: '', // this is a calculated number\n    independentField: state.exactFieldURL === 'output' ? OUTPUT : INPUT,\n    inputCurrency: state.inputCurrencyURL ? state.inputCurrencyURL : state.outputCurrencyURL === 'BNB' ? '' : 'BNB',\n    outputCurrency: state.outputCurrencyURL\n      ? state.outputCurrencyURL === 'BNB'\n        ? !state.inputCurrencyURL || (state.inputCurrencyURL && state.inputCurrencyURL !== 'BNB')\n          ? 'BNB'\n          : ''\n        : state.outputCurrencyURL\n      : state.initialCurrency\n      ? state.initialCurrency\n      : ''\n  }\n}\n\nfunction swapStateReducer(state, action) {\n  switch (action.type) {\n    case 'FLIP_INDEPENDENT': {\n      const { independentField, inputCurrency, outputCurrency } = state\n      return {\n        ...state,\n        dependentValue: '',\n        independentField: independentField === INPUT ? OUTPUT : INPUT,\n        inputCurrency: outputCurrency,\n        outputCurrency: inputCurrency\n      }\n    }\n    case 'SELECT_CURRENCY': {\n      const { inputCurrency, outputCurrency } = state\n      const { field, currency } = action.payload\n\n      const newInputCurrency = field === INPUT ? currency : inputCurrency\n      const newOutputCurrency = field === OUTPUT ? currency : outputCurrency\n\n      if (newInputCurrency === newOutputCurrency) {\n        return {\n          ...state,\n          inputCurrency: field === INPUT ? currency : '',\n          outputCurrency: field === OUTPUT ? currency : ''\n        }\n      } else {\n        return {\n          ...state,\n          inputCurrency: newInputCurrency,\n          outputCurrency: newOutputCurrency\n        }\n      }\n    }\n    case 'UPDATE_INDEPENDENT': {\n      const { field, value } = action.payload\n      const { dependentValue, independentValue } = state\n      return {\n        ...state,\n        independentValue: value,\n        dependentValue: value === independentValue ? dependentValue : '',\n        independentField: field\n      }\n    }\n    case 'UPDATE_DEPENDENT': {\n      return {\n        ...state,\n        dependentValue: action.payload\n      }\n    }\n    default: {\n      return getInitialSwapState()\n    }\n  }\n}\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(outputValue)\n      } else {\n        return outputValue\n          .mul(factor)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(inputValue)\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(\n  swapType,\n  inputReserveETH,\n  inputReserveToken,\n  inputDecimals,\n  outputReserveETH,\n  outputReserveToken,\n  outputDecimals,\n  invert = false\n) {\n  if (swapType === ETH_TO_TOKEN) {\n    return getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals, invert)\n  } else if (swapType === TOKEN_TO_ETH) {\n    return getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18, invert)\n  } else if (swapType === TOKEN_TO_TOKEN) {\n    const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n    const firstRate = getExchangeRate(inputReserveToken, inputDecimals, inputReserveETH, 18)\n    const secondRate = getExchangeRate(outputReserveETH, 18, outputReserveToken, outputDecimals)\n    try {\n      return !!(firstRate && secondRate) ? firstRate.mul(secondRate).div(factor) : undefined\n    } catch {}\n  }\n}\n\nexport default function ExchangePage({ initialCurrency, sending = false, params }) {\n  const { t } = useTranslation()\n  const { account, chainId, error } = useWeb3React()\n\n  const urlAddedTokens = {}\n  if (params.inputCurrency) {\n    urlAddedTokens[params.inputCurrency] = true\n  }\n  if (params.outputCurrency) {\n    urlAddedTokens[params.outputCurrency] = true\n  }\n  if (isAddress(initialCurrency)) {\n    urlAddedTokens[initialCurrency] = true\n  }\n\n  const addTransaction = useTransactionAdder()\n\n  // check if URL specifies valid slippage, if so use as default\n  const initialSlippage = (token = false) => {\n    let slippage = Number.parseInt(params.slippage)\n    if (!isNaN(slippage) && (slippage === 0 || slippage >= 1)) {\n      return slippage // round to match custom input availability\n    }\n    // check for token <-> token slippage option\n    return token ? TOKEN_ALLOWED_SLIPPAGE_DEFAULT : ALLOWED_SLIPPAGE_DEFAULT\n  }\n\n  // check URL params for recipient, only on send page\n  const initialRecipient = () => {\n    if (sending && params.recipient) {\n      return params.recipient\n    }\n    return ''\n  }\n\n  const [brokenTokenWarning, setBrokenTokenWarning] = useState()\n\n  const [deadlineFromNow, setDeadlineFromNow] = useState(DEFAULT_DEADLINE_FROM_NOW)\n\n  const [rawSlippage, setRawSlippage] = useState(() => initialSlippage())\n  const [rawTokenSlippage, setRawTokenSlippage] = useState(() => initialSlippage(true))\n\n  const allowedSlippageBig = ethers.utils.bigNumberify(rawSlippage)\n  const tokenAllowedSlippageBig = ethers.utils.bigNumberify(rawTokenSlippage)\n\n  // analytics\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search)\n  }, [])\n\n  // core swap state\n  const [swapState, dispatchSwapState] = useReducer(\n    swapStateReducer,\n    {\n      initialCurrency: initialCurrency,\n      inputCurrencyURL: params.inputCurrency,\n      outputCurrencyURL: params.outputCurrency,\n      exactFieldURL: params.exactField,\n      exactAmountURL: params.exactAmount\n    },\n    getInitialSwapState\n  )\n\n  const { independentValue, dependentValue, independentField, inputCurrency, outputCurrency } = swapState\n\n  useEffect(() => {\n    setBrokenTokenWarning(false)\n    for (let i = 0; i < brokenTokens.length; i++) {\n      if (\n        brokenTokens[i].toLowerCase() === outputCurrency.toLowerCase() ||\n        brokenTokens[i].toLowerCase() === inputCurrency.toLowerCase()\n      ) {\n        setBrokenTokenWarning(true)\n      }\n    }\n  }, [outputCurrency, inputCurrency])\n\n  const [recipient, setRecipient] = useState({\n    address: initialRecipient(),\n    name: ''\n  })\n  const [recipientError, setRecipientError] = useState()\n\n  // get swap type from the currency types\n  const swapType = getSwapType(inputCurrency, outputCurrency)\n\n  // get decimals and exchange address for each of the currency types\n  const { symbol: inputSymbol, decimals: inputDecimals, exchangeAddress: inputExchangeAddress } = useTokenDetails(\n    inputCurrency\n  )\n  const { symbol: outputSymbol, decimals: outputDecimals, exchangeAddress: outputExchangeAddress } = useTokenDetails(\n    outputCurrency\n  )\n\n  const inputExchangeContract = useExchangeContract(inputExchangeAddress)\n  const outputExchangeContract = useExchangeContract(outputExchangeAddress)\n  const contract = swapType === ETH_TO_TOKEN ? outputExchangeContract : inputExchangeContract\n\n  // get input allowance\n  const inputAllowance = useAddressAllowance(account, inputCurrency, inputExchangeAddress)\n\n  // fetch reserves for each of the currency types\n  const { reserveETH: inputReserveETH, reserveToken: inputReserveToken } = useExchangeReserves(inputCurrency)\n  const { reserveETH: outputReserveETH, reserveToken: outputReserveToken } = useExchangeReserves(outputCurrency)\n\n  // get balances for each of the currency types\n  const inputBalance = useAddressBalance(account, inputCurrency)\n  const outputBalance = useAddressBalance(account, outputCurrency)\n  const inputBalanceFormatted = !!(inputBalance && Number.isInteger(inputDecimals))\n    ? amountFormatter(inputBalance, inputDecimals, Math.min(4, inputDecimals))\n    : ''\n  const outputBalanceFormatted = !!(outputBalance && Number.isInteger(outputDecimals))\n    ? amountFormatter(outputBalance, outputDecimals, Math.min(4, outputDecimals))\n    : ''\n\n  // compute useful transforms of the data above\n  const independentDecimals = independentField === INPUT ? inputDecimals : outputDecimals\n  const dependentDecimals = independentField === OUTPUT ? inputDecimals : outputDecimals\n\n  // declare/get parsed and formatted versions of input/output values\n  const [independentValueParsed, setIndependentValueParsed] = useState()\n  const dependentValueFormatted = !!(dependentValue && (dependentDecimals || dependentDecimals === 0))\n    ? amountFormatter(dependentValue, dependentDecimals, Math.min(4, dependentDecimals), false)\n    : ''\n  const inputValueParsed = independentField === INPUT ? independentValueParsed : dependentValue\n  const inputValueFormatted = independentField === INPUT ? independentValue : dependentValueFormatted\n  const outputValueParsed = independentField === OUTPUT ? independentValueParsed : dependentValue\n  const outputValueFormatted = independentField === OUTPUT ? independentValue : dependentValueFormatted\n\n  // validate + parse independent value\n  const [independentError, setIndependentError] = useState()\n  useEffect(() => {\n    if (independentValue && (independentDecimals || independentDecimals === 0)) {\n      try {\n        const parsedValue = ethers.utils.parseUnits(independentValue, independentDecimals)\n\n        if (parsedValue.lte(ethers.constants.Zero) || parsedValue.gte(ethers.constants.MaxUint256)) {\n          throw Error()\n        } else {\n          setIndependentValueParsed(parsedValue)\n          setIndependentError(null)\n        }\n      } catch {\n        setIndependentError(t('inputNotValid'))\n      }\n\n      return () => {\n        setIndependentValueParsed()\n        setIndependentError()\n      }\n    }\n  }, [independentValue, independentDecimals, t])\n\n  // calculate slippage from target rate\n  const { minimum: dependentValueMinumum, maximum: dependentValueMaximum } = calculateSlippageBounds(\n    dependentValue,\n    swapType === TOKEN_TO_TOKEN,\n    tokenAllowedSlippageBig,\n    allowedSlippageBig\n  )\n\n  // validate input allowance + balance\n  const [inputError, setInputError] = useState()\n  const [showUnlock, setShowUnlock] = useState(false)\n  useEffect(() => {\n    const inputValueCalculation = independentField === INPUT ? independentValueParsed : dependentValueMaximum\n    if (inputBalance && (inputAllowance || inputCurrency === 'BNB') && inputValueCalculation) {\n      if (inputBalance.lt(inputValueCalculation)) {\n        setInputError(t('insufficientBalance'))\n      } else if (inputCurrency !== 'BNB' && inputAllowance.lt(inputValueCalculation)) {\n        setInputError(t('unlockTokenCont'))\n        setShowUnlock(true)\n      } else {\n        setInputError(null)\n        setShowUnlock(false)\n      }\n      return () => {\n        setInputError()\n        setShowUnlock(false)\n      }\n    }\n  }, [independentField, independentValueParsed, dependentValueMaximum, inputBalance, inputCurrency, inputAllowance, t])\n\n  // calculate dependent value\n  useEffect(() => {\n    const amount = independentValueParsed\n\n    if (swapType === ETH_TO_TOKEN) {\n      const reserveETH = outputReserveETH\n      const reserveToken = outputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveETH, reserveToken)\n              : calculateEtherTokenInputFromOutput(amount, reserveETH, reserveToken)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({\n            type: 'UPDATE_DEPENDENT',\n            payload: calculatedDependentValue\n          })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_ETH) {\n      const reserveETH = inputReserveETH\n      const reserveToken = inputReserveToken\n\n      if (amount && reserveETH && reserveToken) {\n        try {\n          const calculatedDependentValue =\n            independentField === INPUT\n              ? calculateEtherTokenOutputFromInput(amount, reserveToken, reserveETH)\n              : calculateEtherTokenInputFromOutput(amount, reserveToken, reserveETH)\n\n          if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n            throw Error()\n          }\n\n          dispatchSwapState({\n            type: 'UPDATE_DEPENDENT',\n            payload: calculatedDependentValue\n          })\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    } else if (swapType === TOKEN_TO_TOKEN) {\n      const reserveETHFirst = inputReserveETH\n      const reserveTokenFirst = inputReserveToken\n\n      const reserveETHSecond = outputReserveETH\n      const reserveTokenSecond = outputReserveToken\n\n      if (amount && reserveETHFirst && reserveTokenFirst && reserveETHSecond && reserveTokenSecond) {\n        try {\n          if (independentField === INPUT) {\n            const intermediateValue = calculateEtherTokenOutputFromInput(amount, reserveTokenFirst, reserveETHFirst)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            const calculatedDependentValue = calculateEtherTokenOutputFromInput(\n              intermediateValue,\n              reserveETHSecond,\n              reserveTokenSecond\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({\n              type: 'UPDATE_DEPENDENT',\n              payload: calculatedDependentValue\n            })\n          } else {\n            const intermediateValue = calculateEtherTokenInputFromOutput(amount, reserveETHSecond, reserveTokenSecond)\n            if (intermediateValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            const calculatedDependentValue = calculateEtherTokenInputFromOutput(\n              intermediateValue,\n              reserveTokenFirst,\n              reserveETHFirst\n            )\n            if (calculatedDependentValue.lte(ethers.constants.Zero)) {\n              throw Error()\n            }\n            dispatchSwapState({\n              type: 'UPDATE_DEPENDENT',\n              payload: calculatedDependentValue\n            })\n          }\n        } catch {\n          setIndependentError(t('insufficientLiquidity'))\n        }\n        return () => {\n          dispatchSwapState({ type: 'UPDATE_DEPENDENT', payload: '' })\n        }\n      }\n    }\n  }, [\n    independentValueParsed,\n    swapType,\n    outputReserveETH,\n    outputReserveToken,\n    inputReserveETH,\n    inputReserveToken,\n    independentField,\n    t\n  ])\n\n  useEffect(() => {\n    const history = createBrowserHistory()\n    history.push(window.location.pathname + '')\n  }, [])\n\n  const [inverted, setInverted] = useState(false)\n  const exchangeRate = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals)\n  const exchangeRateInverted = getExchangeRate(inputValueParsed, inputDecimals, outputValueParsed, outputDecimals, true)\n\n  const marketRate = getMarketRate(\n    swapType,\n    inputReserveETH,\n    inputReserveToken,\n    inputDecimals,\n    outputReserveETH,\n    outputReserveToken,\n    outputDecimals\n  )\n\n  const percentSlippage =\n    exchangeRate && marketRate && !marketRate.isZero()\n      ? exchangeRate\n          .sub(marketRate)\n          .abs()\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n          .div(marketRate)\n          .sub(ethers.utils.bigNumberify(3).mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(15))))\n      : undefined\n  const percentSlippageFormatted = percentSlippage && amountFormatter(percentSlippage, 16, 2)\n  const slippageWarning =\n    percentSlippage &&\n    percentSlippage.gte(ethers.utils.parseEther('.05')) &&\n    percentSlippage.lt(ethers.utils.parseEther('.2')) // [5% - 20%)\n  const highSlippageWarning = percentSlippage && percentSlippage.gte(ethers.utils.parseEther('.2')) // [20+%\n\n  const isValid = sending\n    ? exchangeRate && inputError === null && independentError === null && recipientError === null && deadlineFromNow\n    : exchangeRate && inputError === null && independentError === null && deadlineFromNow\n\n  const estimatedText = `(${t('estimated')})`\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  async function onSwap() {\n    //if user changed deadline, log new one in minutes\n    if (deadlineFromNow !== DEFAULT_DEADLINE_FROM_NOW) {\n      ReactGA.event({\n        category: 'Advanced Interaction',\n        action: 'Set Custom Deadline',\n        value: deadlineFromNow / 60\n      })\n    }\n\n    const deadline = Math.ceil(Date.now() / 1000) + deadlineFromNow\n\n    // if user has changed slippage, log\n    if (swapType === TOKEN_TO_TOKEN) {\n      if (parseInt(tokenAllowedSlippageBig.toString()) !== TOKEN_ALLOWED_SLIPPAGE_DEFAULT) {\n        ReactGA.event({\n          category: 'Advanced Interaction',\n          action: 'Set Custom Slippage',\n          value: parseInt(tokenAllowedSlippageBig.toString())\n        })\n      }\n    } else {\n      if (parseInt(allowedSlippageBig.toString()) !== ALLOWED_SLIPPAGE_DEFAULT) {\n        ReactGA.event({\n          category: 'Advanced Interaction',\n          action: 'Set Custom Slippage',\n          value: parseInt(allowedSlippageBig.toString())\n        })\n      }\n    }\n\n    let estimate, method, args, value\n\n    let inputEthPerToken = 1\n    if (inputCurrency !== 'BNB') {\n      inputEthPerToken = inputReserveToken && inputReserveETH ? inputReserveETH / inputReserveToken : null\n    }\n    let ethTransactionSize = inputEthPerToken * inputValueFormatted\n\n    // params for GA event\n    let action = ''\n    let label = ''\n\n    if (independentField === INPUT) {\n      // set GA params\n      action = sending ? 'SendInput' : 'SwapInput'\n      label = outputCurrency\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = sending ? contract.estimate.ethToTokenTransferInput : contract.estimate.ethToTokenSwapInput\n        method = sending ? contract.ethToTokenTransferInput : contract.ethToTokenSwapInput\n        args = sending ? [dependentValueMinumum, deadline, recipient.address] : [dependentValueMinumum, deadline]\n        value = independentValueParsed\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = sending ? contract.estimate.tokenToEthTransferInput : contract.estimate.tokenToEthSwapInput\n        method = sending ? contract.tokenToEthTransferInput : contract.tokenToEthSwapInput\n        args = sending\n          ? [independentValueParsed, dependentValueMinumum, deadline, recipient.address]\n          : [independentValueParsed, dependentValueMinumum, deadline]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = sending ? contract.estimate.tokenToTokenTransferInput : contract.estimate.tokenToTokenSwapInput\n        method = sending ? contract.tokenToTokenTransferInput : contract.tokenToTokenSwapInput\n        args = sending\n          ? [\n              independentValueParsed,\n              dependentValueMinumum,\n              ethers.constants.One,\n              deadline,\n              recipient.address,\n              outputCurrency\n            ]\n          : [independentValueParsed, dependentValueMinumum, ethers.constants.One, deadline, outputCurrency]\n        value = ethers.constants.Zero\n      }\n    } else if (independentField === OUTPUT) {\n      // set GA params\n      action = sending ? 'SendOutput' : 'SwapOutput'\n      label = outputCurrency\n\n      if (swapType === ETH_TO_TOKEN) {\n        estimate = sending ? contract.estimate.ethToTokenTransferOutput : contract.estimate.ethToTokenSwapOutput\n        method = sending ? contract.ethToTokenTransferOutput : contract.ethToTokenSwapOutput\n        args = sending ? [independentValueParsed, deadline, recipient.address] : [independentValueParsed, deadline]\n        value = dependentValueMaximum\n      } else if (swapType === TOKEN_TO_ETH) {\n        estimate = sending ? contract.estimate.tokenToEthTransferOutput : contract.estimate.tokenToEthSwapOutput\n        method = sending ? contract.tokenToEthTransferOutput : contract.tokenToEthSwapOutput\n        args = sending\n          ? [independentValueParsed, dependentValueMaximum, deadline, recipient.address]\n          : [independentValueParsed, dependentValueMaximum, deadline]\n        value = ethers.constants.Zero\n      } else if (swapType === TOKEN_TO_TOKEN) {\n        estimate = sending ? contract.estimate.tokenToTokenTransferOutput : contract.estimate.tokenToTokenSwapOutput\n        method = sending ? contract.tokenToTokenTransferOutput : contract.tokenToTokenSwapOutput\n        args = sending\n          ? [\n              independentValueParsed,\n              dependentValueMaximum,\n              ethers.constants.MaxUint256,\n              deadline,\n              recipient.address,\n              outputCurrency\n            ]\n          : [independentValueParsed, dependentValueMaximum, ethers.constants.MaxUint256, deadline, outputCurrency]\n        value = ethers.constants.Zero\n      }\n    }\n\n    const estimatedGasLimit = await estimate(...args, { value })\n    method(...args, {\n      value,\n      gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\n    }).then(response => {\n      addTransaction(response)\n      ReactGA.event({\n        category: 'Transaction',\n        action: action,\n        label: label,\n        value: ethTransactionSize,\n        dimension1: response.hash\n      })\n      ReactGA.event({\n        category: 'Hash',\n        action: response.hash,\n        label: ethTransactionSize.toString()\n      })\n    })\n  }\n\n  const [customSlippageError, setcustomSlippageError] = useState('')\n\n  const toggleWalletModal = useWalletModalToggle()\n\n  const newInputDetected =\n    inputCurrency !== 'BNB' && inputCurrency && !INITIAL_TOKENS_CONTEXT[chainId].hasOwnProperty(inputCurrency)\n\n  const newOutputDetected =\n    outputCurrency !== 'BNB' && outputCurrency && !INITIAL_TOKENS_CONTEXT[chainId].hasOwnProperty(outputCurrency)\n\n  const [showInputWarning, setShowInputWarning] = useState(false)\n  const [showOutputWarning, setShowOutputWarning] = useState(false)\n\n  useEffect(() => {\n    if (newInputDetected) {\n      setShowInputWarning(true)\n    } else {\n      setShowInputWarning(false)\n    }\n  }, [newInputDetected, setShowInputWarning])\n\n  useEffect(() => {\n    if (newOutputDetected) {\n      setShowOutputWarning(true)\n    } else {\n      setShowOutputWarning(false)\n    }\n  }, [newOutputDetected, setShowOutputWarning])\n\n  return (\n    <>\n      {showInputWarning && (\n        <WarningCard\n          onDismiss={() => {\n            setShowInputWarning(false)\n          }}\n          urlAddedTokens={urlAddedTokens}\n          currency={inputCurrency}\n        />\n      )}\n      {showOutputWarning && (\n        <WarningCard\n          onDismiss={() => {\n            setShowOutputWarning(false)\n          }}\n          urlAddedTokens={urlAddedTokens}\n          currency={outputCurrency}\n        />\n      )}\n      <CurrencyInputPanel\n        title={t('input')}\n        urlAddedTokens={urlAddedTokens}\n        description={inputValueFormatted && independentField === OUTPUT ? estimatedText : ''}\n        extraText={inputBalanceFormatted && formatBalance(inputBalanceFormatted)}\n        extraTextClickHander={() => {\n          if (inputBalance && inputDecimals) {\n            const valueToSet = inputCurrency === 'BNB' ? inputBalance.sub(ethers.utils.parseEther('.1')) : inputBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              dispatchSwapState({\n                type: 'UPDATE_INDEPENDENT',\n                payload: {\n                  value: amountFormatter(valueToSet, inputDecimals, inputDecimals, false),\n                  field: INPUT\n                }\n              })\n            }\n          }\n        }}\n        onCurrencySelected={inputCurrency => {\n          dispatchSwapState({\n            type: 'SELECT_CURRENCY',\n            payload: { currency: inputCurrency, field: INPUT }\n          })\n        }}\n        onValueChange={inputValue => {\n          dispatchSwapState({\n            type: 'UPDATE_INDEPENDENT',\n            payload: { value: inputValue, field: INPUT }\n          })\n        }}\n        showUnlock={showUnlock}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={inputCurrency}\n        value={inputValueFormatted}\n        errorMessage={inputError ? inputError : independentField === INPUT ? independentError : ''}\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow\n            onClick={() => {\n              dispatchSwapState({ type: 'FLIP_INDEPENDENT' })\n            }}\n            clickable\n            alt=\"swap\"\n            active={isValid}\n          />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('output')}\n        description={outputValueFormatted && independentField === INPUT ? estimatedText : ''}\n        extraText={outputBalanceFormatted && formatBalance(outputBalanceFormatted)}\n        urlAddedTokens={urlAddedTokens}\n        onCurrencySelected={outputCurrency => {\n          dispatchSwapState({\n            type: 'SELECT_CURRENCY',\n            payload: { currency: outputCurrency, field: OUTPUT }\n          })\n        }}\n        onValueChange={outputValue => {\n          dispatchSwapState({\n            type: 'UPDATE_INDEPENDENT',\n            payload: { value: outputValue, field: OUTPUT }\n          })\n        }}\n        selectedTokens={[inputCurrency, outputCurrency]}\n        selectedTokenAddress={outputCurrency}\n        value={outputValueFormatted}\n        errorMessage={independentField === OUTPUT ? independentError : ''}\n        disableUnlock\n      />\n      {sending ? (\n        <>\n          <OversizedPanel>\n            <DownArrowBackground>\n              <DownArrow active={isValid} alt=\"arrow\" />\n            </DownArrowBackground>\n          </OversizedPanel>\n          <AddressInputPanel onChange={setRecipient} onError={setRecipientError} initialInput={recipient} />\n        </>\n      ) : (\n        ''\n      )}\n      <OversizedPanel hideBottom>\n        <ExchangeRateWrapper\n          onClick={() => {\n            setInverted(inverted => !inverted)\n          }}\n        >\n          <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n          {inverted ? (\n            <span>\n              {exchangeRate\n                ? `1 ${inputSymbol} = ${amountFormatter(exchangeRate, 18, 6, false)} ${outputSymbol}`\n                : ' - '}\n            </span>\n          ) : (\n            <span>\n              {exchangeRate\n                ? `1 ${outputSymbol} = ${amountFormatter(exchangeRateInverted, 18, 6, false)} ${inputSymbol}`\n                : ' - '}\n            </span>\n          )}\n        </ExchangeRateWrapper>\n      </OversizedPanel>\n      <TransactionDetails\n        account={account}\n        setRawSlippage={setRawSlippage}\n        setRawTokenSlippage={setRawTokenSlippage}\n        rawSlippage={rawSlippage}\n        slippageWarning={slippageWarning}\n        highSlippageWarning={highSlippageWarning}\n        brokenTokenWarning={brokenTokenWarning}\n        setDeadline={setDeadlineFromNow}\n        deadline={deadlineFromNow}\n        inputError={inputError}\n        independentError={independentError}\n        inputCurrency={inputCurrency}\n        outputCurrency={outputCurrency}\n        independentValue={independentValue}\n        independentValueParsed={independentValueParsed}\n        independentField={independentField}\n        INPUT={INPUT}\n        inputValueParsed={inputValueParsed}\n        outputValueParsed={outputValueParsed}\n        inputSymbol={inputSymbol}\n        outputSymbol={outputSymbol}\n        dependentValueMinumum={dependentValueMinumum}\n        dependentValueMaximum={dependentValueMaximum}\n        dependentDecimals={dependentDecimals}\n        independentDecimals={independentDecimals}\n        percentSlippageFormatted={percentSlippageFormatted}\n        setcustomSlippageError={setcustomSlippageError}\n        recipientAddress={recipient.address}\n        sending={sending}\n      />\n      <Flex>\n        <Button\n          disabled={\n            brokenTokenWarning ? true : !account && !error ? false : !isValid || customSlippageError === 'invalid'\n          }\n          onClick={account && !error ? onSwap : toggleWalletModal}\n          warning={highSlippageWarning || customSlippageError === 'warning'}\n          loggedOut={!account}\n        >\n          {brokenTokenWarning\n            ? 'Swap'\n            : !account\n            ? t('connectToWallet')\n            : sending\n            ? highSlippageWarning || customSlippageError === 'warning'\n              ? t('sendAnyway')\n              : t('send')\n            : highSlippageWarning || customSlippageError === 'warning'\n            ? t('swapAnyway')\n            : t('swap')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n"],"sourceRoot":""}