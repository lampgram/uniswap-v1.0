{"version":3,"sources":["pages/Pool/RemoveLiquidity.js","assets/svg/SVGArrowDown.js","components/ContextualInfo/index.js"],"names":["ALLOWED_SLIPPAGE","ethers","utils","bigNumberify","GAS_MARGIN","BlueSpan","styled","span","theme","royalBlue","DownArrowBackground","div","flexRowNoWrap","DownArrow","ArrowDown","active","doveGray","RemoveLiquidityOutput","RemoveLiquidityOutputText","RemoveLiquidityOutputPlus","SummaryPanel","flexColumnNoWrap","LastSummaryText","ExchangeRateWrapper","ExchangeRate","Flex","getExchangeRate","inputValue","inputDecimals","outputValue","outputDecimals","invert","factor","pow","mul","calculateSlippageBounds","value","offset","minimum","sub","maximum","add","lt","constants","Zero","gt","MaxUint256","RemoveLiquidity","params","t","useTranslation","useWeb3React","library","account","chainId","addTransaction","useTransactionAdder","useState","brokenTokenWarning","setBrokenTokenWarning","useEffect","createBrowserHistory","push","window","location","pathname","poolTokenAddress","outputCurrency","setOutputCurrency","poolTokenAmount","setValue","inputError","setInputError","valueParsed","setValueParsed","i","brokenTokens","length","toLowerCase","parsedValue","parseUnits","useTokenDetails","symbol","decimals","exchangeAddress","totalPoolTokens","setTotalPoolTokens","poolTokenBalance","useAddressBalance","exchangeETHBalance","exchangeTokenBalance","urlAddedTokens","exchange","useExchangeContract","ownershipPercentage","isZero","undefined","ownershipPercentageFormatted","amountFormatter","ETHOwnShare","TokenOwnShare","ETHPer","tokenPer","ethWithdrawn","tokenWithdrawn","ethWithdrawnMin","tokenWithdrawnMin","fetchPoolTokens","useCallback","totalSupply","then","a","ethTransactionSize","deadline","Math","ceil","Date","now","estimate","removeLiquidity","estimatedGasLimit","gasLimit","calculateGasMargin","response","ReactGA","event","category","action","label","dimension1","hash","toString","on","removeListener","b","text","renderTransactionDetails","min","isActive","isValid","marketRate","reserveETH","reserveToken","getMarketRate","newOutputDetected","INITIAL_TOKENS_CONTEXT","hasOwnProperty","showCustomTokenWarning","setShowCustomTokenWarning","onDismiss","currency","title","extraText","formatBalance","extraTextClickHander","valueToSet","onCurrencySelected","onValueChange","errorMessage","selectedTokenAddress","hideETH","alt","description","key","renderInput","disableTokenSelect","disableUnlock","hideBottom","contextualInfo","isError","openDetailsText","closeDetailsText","renderSummary","disabled","onClick","SVGArrowDown","props","width","height","viewBox","fill","d","SummaryWrapper","error","salmonRed","Details","concreteGray","SummaryWrapperContainer","ColoredDropup","highSlippageWarning","rest","ColoredDropdown","ContextualInfo","state","showDetails","this","setState","prevState","renderDetails","Component","defaultProps"],"mappings":"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","file":"static/js/14.77cd2a49.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport ReactGA from 'react-ga'\nimport { createBrowserHistory } from 'history'\nimport { ethers } from 'ethers'\nimport styled from 'styled-components'\n\nimport { useWeb3React, useExchangeContract } from '../../hooks'\nimport { useTransactionAdder } from '../../contexts/Transactions'\nimport { useTokenDetails, INITIAL_TOKENS_CONTEXT } from '../../contexts/Tokens'\nimport { useAddressBalance } from '../../contexts/Balances'\n\nimport { calculateGasMargin, amountFormatter } from '../../utils'\nimport { brokenTokens } from '../../constants'\n\nimport { Button } from '../../theme'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport ContextualInfo from '../../components/ContextualInfo'\nimport OversizedPanel from '../../components/OversizedPanel'\nimport ArrowDown from '../../assets/svg/SVGArrowDown'\nimport WarningCard from '../../components/WarningCard'\n\n// denominated in bips\nconst ALLOWED_SLIPPAGE = ethers.utils.bigNumberify(200)\n\n// denominated in seconds\nconst DEADLINE_FROM_NOW = 60 * 15\n\n// denominated in bips\nconst GAS_MARGIN = ethers.utils.bigNumberify(1000)\n\nconst BlueSpan = styled.span`\n  color: ${({ theme }) => theme.royalBlue};\n`\n\nconst DownArrowBackground = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  justify-content: center;\n  align-items: center;\n`\n\nconst DownArrow = styled(ArrowDown)`\n  ${({ theme }) => theme.flexRowNoWrap}\n  color: ${({ theme, active }) => (active ? theme.royalBlue : theme.doveGray)};\n  width: 0.625rem;\n  height: 0.625rem;\n  position: relative;\n  padding: 0.875rem;\n`\n\nconst RemoveLiquidityOutput = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  min-height: 3.5rem;\n`\n\nconst RemoveLiquidityOutputText = styled.div`\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  padding: 1rem 0.75rem;\n`\n\nconst RemoveLiquidityOutputPlus = styled.div`\n  font-size: 1.25rem;\n  line-height: 1.5rem;\n  padding: 1rem 0;\n`\n\nconst SummaryPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  padding: 1rem 0;\n`\n\nconst LastSummaryText = styled.div`\n  margin-top: 1rem;\n`\n\nconst ExchangeRateWrapper = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: ${({ theme }) => theme.doveGray};\n  font-size: 0.75rem;\n  padding: 0.25rem 1rem 0;\n`\n\nconst ExchangeRate = styled.span`\n  flex: 1 1 auto;\n  width: 0;\n  color: ${({ theme }) => theme.doveGray};\n`\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 2rem;\n\n  button {\n    max-width: 20rem;\n  }\n`\n\nfunction getExchangeRate(inputValue, inputDecimals, outputValue, outputDecimals, invert = false) {\n  try {\n    if (\n      inputValue &&\n      (inputDecimals || inputDecimals === 0) &&\n      outputValue &&\n      (outputDecimals || outputDecimals === 0)\n    ) {\n      const factor = ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))\n\n      if (invert) {\n        return inputValue\n          .mul(factor)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(outputValue)\n      } else {\n        return outputValue\n          .mul(factor)\n          .mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(inputDecimals)))\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(outputDecimals)))\n          .div(inputValue)\n      }\n    }\n  } catch {}\n}\n\nfunction getMarketRate(reserveETH, reserveToken, decimals, invert = false) {\n  return getExchangeRate(reserveETH, 18, reserveToken, decimals, invert)\n}\n\nfunction calculateSlippageBounds(value) {\n  if (value) {\n    const offset = value.mul(ALLOWED_SLIPPAGE).div(ethers.utils.bigNumberify(10000))\n    const minimum = value.sub(offset)\n    const maximum = value.add(offset)\n    return {\n      minimum: minimum.lt(ethers.constants.Zero) ? ethers.constants.Zero : minimum,\n      maximum: maximum.gt(ethers.constants.MaxUint256) ? ethers.constants.MaxUint256 : maximum\n    }\n  } else {\n    return {}\n  }\n}\n\nexport default function RemoveLiquidity({ params }) {\n  const { t } = useTranslation()\n  const { library, account, active, chainId } = useWeb3React()\n\n  const addTransaction = useTransactionAdder()\n\n  const [brokenTokenWarning, setBrokenTokenWarning] = useState()\n\n  // clear url of query\n  useEffect(() => {\n    const history = createBrowserHistory()\n    history.push(window.location.pathname + '')\n  }, [])\n\n  const [outputCurrency, setOutputCurrency] = useState(params.poolTokenAddress)\n  const [value, setValue] = useState(params.poolTokenAmount ? params.poolTokenAmount : '')\n  const [inputError, setInputError] = useState()\n  const [valueParsed, setValueParsed] = useState()\n\n  useEffect(() => {\n    setBrokenTokenWarning(false)\n    for (let i = 0; i < brokenTokens.length; i++) {\n      if (brokenTokens[i].toLowerCase() === outputCurrency.toLowerCase()) {\n        setBrokenTokenWarning(true)\n      }\n    }\n  }, [outputCurrency])\n\n  // parse value\n  useEffect(() => {\n    try {\n      const parsedValue = ethers.utils.parseUnits(value, 18)\n      setValueParsed(parsedValue)\n    } catch {\n      if (value !== '') {\n        setInputError(t('inputNotValid'))\n      }\n    }\n\n    return () => {\n      setInputError()\n      setValueParsed()\n    }\n  }, [t, value])\n\n  const { symbol, decimals, exchangeAddress } = useTokenDetails(outputCurrency)\n\n  const [totalPoolTokens, setTotalPoolTokens] = useState()\n  const poolTokenBalance = useAddressBalance(account, exchangeAddress)\n  const exchangeETHBalance = useAddressBalance(exchangeAddress, 'BNB')\n  const exchangeTokenBalance = useAddressBalance(exchangeAddress, outputCurrency)\n\n  const urlAddedTokens = {}\n  if (params.poolTokenAddress) {\n    urlAddedTokens[params.poolTokenAddress] = true\n  }\n\n  // input validation\n  useEffect(() => {\n    if (valueParsed && poolTokenBalance) {\n      if (valueParsed.gt(poolTokenBalance)) {\n        setInputError(t('insufficientBalance'))\n      } else {\n        setInputError(null)\n      }\n    }\n  }, [poolTokenBalance, t, valueParsed])\n\n  const exchange = useExchangeContract(exchangeAddress)\n\n  const ownershipPercentage =\n    poolTokenBalance && totalPoolTokens && !totalPoolTokens.isZero()\n      ? poolTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18))).div(totalPoolTokens)\n      : undefined\n  const ownershipPercentageFormatted = ownershipPercentage && amountFormatter(ownershipPercentage, 16, 4)\n\n  const ETHOwnShare =\n    exchangeETHBalance &&\n    ownershipPercentage &&\n    exchangeETHBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n  const TokenOwnShare =\n    exchangeTokenBalance &&\n    ownershipPercentage &&\n    exchangeTokenBalance.mul(ownershipPercentage).div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n\n  const ETHPer = exchangeETHBalance\n    ? exchangeETHBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n    : undefined\n  const tokenPer = exchangeTokenBalance\n    ? exchangeTokenBalance.mul(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n    : undefined\n\n  const ethWithdrawn =\n    ETHPer && valueParsed && totalPoolTokens && !totalPoolTokens.isZero()\n      ? ETHPer.mul(valueParsed)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n          .div(totalPoolTokens)\n      : undefined\n  const tokenWithdrawn =\n    tokenPer && valueParsed && totalPoolTokens && !totalPoolTokens.isZero()\n      ? tokenPer\n          .mul(valueParsed)\n          .div(ethers.utils.bigNumberify(10).pow(ethers.utils.bigNumberify(18)))\n          .div(totalPoolTokens)\n      : undefined\n\n  const ethWithdrawnMin = ethWithdrawn ? calculateSlippageBounds(ethWithdrawn).minimum : undefined\n  const tokenWithdrawnMin = tokenWithdrawn ? calculateSlippageBounds(tokenWithdrawn).minimum : undefined\n\n  const fetchPoolTokens = useCallback(() => {\n    if (exchange) {\n      exchange.totalSupply().then(totalSupply => {\n        setTotalPoolTokens(totalSupply)\n      })\n    }\n  }, [exchange])\n  useEffect(() => {\n    fetchPoolTokens()\n    library.on('block', fetchPoolTokens)\n\n    return () => {\n      library.removeListener('block', fetchPoolTokens)\n    }\n  }, [fetchPoolTokens, library])\n\n  async function onRemoveLiquidity() {\n    // take BNB amount, multiplied by BNB rate and 2 for total tx size\n    let ethTransactionSize = (ethWithdrawn / 1e18) * 2\n\n    const deadline = Math.ceil(Date.now() / 1000) + DEADLINE_FROM_NOW\n\n    const estimatedGasLimit = await exchange.estimate.removeLiquidity(\n      valueParsed,\n      ethWithdrawnMin,\n      tokenWithdrawnMin,\n      deadline\n    )\n\n    exchange\n      .removeLiquidity(valueParsed, ethWithdrawnMin, tokenWithdrawnMin, deadline, {\n        gasLimit: calculateGasMargin(estimatedGasLimit, GAS_MARGIN)\n      })\n      .then(response => {\n        ReactGA.event({\n          category: 'Transaction',\n          action: 'Remove Liquidity',\n          label: outputCurrency,\n          value: ethTransactionSize,\n          dimension1: response.hash\n        })\n        ReactGA.event({\n          category: 'Hash',\n          action: response.hash,\n          label: ethTransactionSize.toString(),\n          value: ethTransactionSize\n        })\n        addTransaction(response)\n      })\n  }\n\n  const b = text => <BlueSpan>{text}</BlueSpan>\n\n  function renderTransactionDetails() {\n    return (\n      <div>\n        <div>\n          {t('youAreRemoving')} {b(`${amountFormatter(ethWithdrawn, 18, 4)} BNB`)} {t('and')}{' '}\n          {b(`${amountFormatter(tokenWithdrawn, decimals, Math.min(decimals, 4))} ${symbol}`)} {t('outPool')}\n        </div>\n        <LastSummaryText>\n          {t('youWillRemove')} {b(amountFormatter(valueParsed, 18, 4))} {t('liquidityTokens')}\n        </LastSummaryText>\n        <LastSummaryText>\n          {t('totalSupplyIs')} {b(amountFormatter(totalPoolTokens, 18, 4))}\n        </LastSummaryText>\n        <LastSummaryText>\n          {t('tokenWorth')} {b(amountFormatter(ETHPer.div(totalPoolTokens), 18, 4))} BNB {t('and')}{' '}\n          {b(amountFormatter(tokenPer.div(totalPoolTokens), decimals, Math.min(4, decimals)))} {symbol}\n        </LastSummaryText>\n      </div>\n    )\n  }\n\n  function renderSummary() {\n    let contextualInfo = ''\n    let isError = false\n    if (brokenTokenWarning) {\n      contextualInfo = t('brokenToken')\n      isError = true\n    } else if (inputError) {\n      contextualInfo = inputError\n      isError = true\n    } else if (!outputCurrency || outputCurrency === 'BNB') {\n      contextualInfo = t('selectTokenCont')\n    } else if (!valueParsed) {\n      contextualInfo = t('enterValueCont')\n    } else if (!account) {\n      contextualInfo = t('noWallet')\n      isError = true\n    }\n\n    return (\n      <ContextualInfo\n        key=\"context-info\"\n        openDetailsText={t('transactionDetails')}\n        closeDetailsText={t('hideDetails')}\n        contextualInfo={contextualInfo}\n        isError={isError}\n        renderTransactionDetails={renderTransactionDetails}\n      />\n    )\n  }\n\n  function formatBalance(value) {\n    return `Balance: ${value}`\n  }\n\n  const isActive = active && account\n  const isValid = inputError === null\n\n  const marketRate = getMarketRate(exchangeETHBalance, exchangeTokenBalance, decimals)\n\n  const newOutputDetected =\n    outputCurrency !== 'BNB' && outputCurrency && !INITIAL_TOKENS_CONTEXT[chainId].hasOwnProperty(outputCurrency)\n\n  const [showCustomTokenWarning, setShowCustomTokenWarning] = useState(false)\n\n  useEffect(() => {\n    if (newOutputDetected) {\n      setShowCustomTokenWarning(true)\n    } else {\n      setShowCustomTokenWarning(false)\n    }\n  }, [newOutputDetected])\n\n  return (\n    <>\n      {showCustomTokenWarning && (\n        <WarningCard\n          onDismiss={() => {\n            setShowCustomTokenWarning(false)\n          }}\n          urlAddedTokens={urlAddedTokens}\n          currency={outputCurrency}\n        />\n      )}\n      <CurrencyInputPanel\n        title={t('poolTokens')}\n        extraText={poolTokenBalance && formatBalance(amountFormatter(poolTokenBalance, 18, 4))}\n        extraTextClickHander={() => {\n          if (poolTokenBalance) {\n            const valueToSet = poolTokenBalance\n            if (valueToSet.gt(ethers.constants.Zero)) {\n              setValue(amountFormatter(valueToSet, 18, 18, false))\n            }\n          }\n        }}\n        urlAddedTokens={urlAddedTokens}\n        onCurrencySelected={setOutputCurrency}\n        onValueChange={setValue}\n        value={value}\n        errorMessage={inputError}\n        selectedTokenAddress={outputCurrency}\n        hideETH={true}\n      />\n      <OversizedPanel>\n        <DownArrowBackground>\n          <DownArrow active={isActive} alt=\"arrow\" />\n        </DownArrowBackground>\n      </OversizedPanel>\n      <CurrencyInputPanel\n        title={t('output')}\n        description={!!(ethWithdrawn && tokenWithdrawn) ? `(${t('estimated')})` : ''}\n        key=\"remove-liquidity-input\"\n        renderInput={() =>\n          !!(ethWithdrawn && tokenWithdrawn) ? (\n            <RemoveLiquidityOutput>\n              <RemoveLiquidityOutputText>\n                {`${amountFormatter(ethWithdrawn, 18, 4, false)} BNB`}\n              </RemoveLiquidityOutputText>\n              <RemoveLiquidityOutputPlus> + </RemoveLiquidityOutputPlus>\n              <RemoveLiquidityOutputText>\n                {`${amountFormatter(tokenWithdrawn, decimals, Math.min(4, decimals))} ${symbol}`}\n              </RemoveLiquidityOutputText>\n            </RemoveLiquidityOutput>\n          ) : (\n            <RemoveLiquidityOutput />\n          )\n        }\n        disableTokenSelect\n        disableUnlock\n      />\n      <OversizedPanel key=\"remove-liquidity-input-under\" hideBottom>\n        <SummaryPanel>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('exchangeRate')}</ExchangeRate>\n            {marketRate ? <span>{`1 BNB = ${amountFormatter(marketRate, 18, 4)} ${symbol}`}</span> : ' - '}\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>{t('currentPoolSize')}</ExchangeRate>\n            {exchangeETHBalance && exchangeTokenBalance && (decimals || decimals === 0) ? (\n              <span>{`${amountFormatter(exchangeETHBalance, 18, 4)} BNB + ${amountFormatter(\n                exchangeTokenBalance,\n                decimals,\n                Math.min(decimals, 4)\n              )} ${symbol}`}</span>\n            ) : (\n              ' - '\n            )}\n          </ExchangeRateWrapper>\n          <ExchangeRateWrapper>\n            <ExchangeRate>\n              {t('yourPoolShare')} ({ownershipPercentageFormatted && ownershipPercentageFormatted}%)\n            </ExchangeRate>\n            {ETHOwnShare && TokenOwnShare ? (\n              <span>\n                {`${amountFormatter(ETHOwnShare, 18, 4)} BNB + ${amountFormatter(\n                  TokenOwnShare,\n                  decimals,\n                  Math.min(decimals, 4)\n                )} ${symbol}`}\n              </span>\n            ) : (\n              ' - '\n            )}\n          </ExchangeRateWrapper>\n        </SummaryPanel>\n      </OversizedPanel>\n      {renderSummary()}\n      <Flex>\n        <Button disabled={!isValid} onClick={onRemoveLiquidity}>\n          {t('removeLiquidity')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n","import React from 'react'\n\nconst SVGArrowDown = props => (\n  <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 9 10\" fill=\"currentColor\" {...props}>\n    <path\n      d=\"M5.298 0H4.24v7.911h-.075L1.256 4.932l-.717.735L4.769 10 9 5.667l-.718-.735-2.908 2.979h-.076V0z\"\n      fill=\"currentColor\"\n    />\n  </svg>\n)\n\nexport default SVGArrowDown\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport ReactGA from 'react-ga'\nimport { ReactComponent as Dropup } from '../../assets/images/dropup-blue.svg'\nimport { ReactComponent as Dropdown } from '../../assets/images/dropdown-blue.svg'\n\nconst SummaryWrapper = styled.div`\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.doveGray)};\n  font-size: 0.75rem;\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n`\n\nconst Details = styled.div`\n  background-color: ${({ theme }) => theme.concreteGray};\n  padding: 1.5rem;\n  border-radius: 1rem;\n  font-size: 0.75rem;\n  margin-top: 1rem;\n`\n\nconst SummaryWrapperContainer = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap};\n  color: ${({ theme }) => theme.royalBlue};\n  text-align: center;\n  margin-top: 1rem;\n  padding-top: 1rem;\n  cursor: pointer;\n  align-items: center;\n  justify-content: center;\n  font-size: 0.75rem;\n\n  span {\n    margin-right: 12px;\n  }\n\n  img {\n    height: 0.75rem;\n    width: 0.75rem;\n  }\n`\n\nconst WrappedDropup = ({ isError, highSlippageWarning, ...rest }) => <Dropup {...rest} />\nconst ColoredDropup = styled(WrappedDropup)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nconst WrappedDropdown = ({ isError, highSlippageWarning, ...rest }) => <Dropdown {...rest} />\nconst ColoredDropdown = styled(WrappedDropdown)`\n  path {\n    stroke: ${({ theme }) => theme.royalBlue};\n  }\n`\n\nclass ContextualInfo extends Component {\n  static propTypes = {\n    openDetailsText: PropTypes.string,\n    renderTransactionDetails: PropTypes.func,\n    contextualInfo: PropTypes.string,\n    isError: PropTypes.bool\n  }\n\n  static defaultProps = {\n    openDetailsText: 'Advanced Details',\n    closeDetailsText: 'Hide Advanced',\n    renderTransactionDetails() {},\n    contextualInfo: '',\n    isError: false\n  }\n\n  state = {\n    showDetails: false\n  }\n\n  renderDetails() {\n    if (!this.state.showDetails) {\n      return null\n    }\n\n    return <Details>{this.props.renderTransactionDetails()}</Details>\n  }\n\n  render() {\n    const { openDetailsText, closeDetailsText, contextualInfo, isError } = this.props\n\n    if (contextualInfo) {\n      return <SummaryWrapper error={isError}>{contextualInfo}</SummaryWrapper>\n    }\n\n    return (\n      <>\n        <SummaryWrapperContainer\n          onClick={() => {\n            !this.state.showDetails &&\n              ReactGA.event({\n                category: 'Advanced Interaction',\n                action: 'Open Advanced Details',\n                label: 'Pool Page Details'\n              })\n            this.setState(prevState => {\n              return { showDetails: !prevState.showDetails }\n            })\n          }}\n        >\n          {!this.state.showDetails ? (\n            <>\n              <span>{openDetailsText}</span>\n              <ColoredDropup />\n            </>\n          ) : (\n            <>\n              <span>{closeDetailsText}</span>\n              <ColoredDropdown />\n            </>\n          )}\n        </SummaryWrapperContainer>\n        {this.renderDetails()}\n      </>\n    )\n  }\n}\n\nexport default ContextualInfo\n"],"sourceRoot":""}